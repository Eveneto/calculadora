#!/bin/bash

# Criador de Pacote Port√°til - Calculadora Qt C++
# Cria um pacote ZIP com execut√°vel e depend√™ncias Qt

echo "üì¶ CRIADOR DE PACOTE PORT√ÅTIL"
echo "============================="

# Verificar se execut√°vel existe
if [ ! -f "build/calculadora" ]; then
    echo "‚ùå Execut√°vel n√£o encontrado!"
    echo "Execute ./build-local.sh primeiro"
    exit 1
fi

# Configura√ß√µes
PACKAGE_NAME="calculadora-linux-x64"
PACKAGE_DIR="dist/$PACKAGE_NAME"
ZIP_FILE="$PACKAGE_NAME.zip"

echo "üìã Configura√ß√µes:"
echo "   Nome do pacote: $PACKAGE_NAME"
echo "   Diret√≥rio: $PACKAGE_DIR"
echo "   Arquivo final: $ZIP_FILE"
echo

# Limpar e criar diret√≥rio de distribui√ß√£o
echo "üßπ Preparando diret√≥rio..."
rm -rf dist/
mkdir -p "$PACKAGE_DIR"

# Copiar execut√°vel
echo "üìã Copiando execut√°vel..."
cp build/calculadora "$PACKAGE_DIR/"
chmod +x "$PACKAGE_DIR/calculadora"

# Encontrar depend√™ncias Qt
echo "üîç Identificando depend√™ncias Qt..."
QT_LIBS=$(ldd build/calculadora | grep libQt | awk '{print $3}')

if [ -z "$QT_LIBS" ]; then
    echo "‚ùå N√£o foi poss√≠vel encontrar depend√™ncias Qt!"
    exit 1
fi

echo "üì¶ Copiando bibliotecas Qt..."
for lib in $QT_LIBS; do
    if [ -f "$lib" ]; then
        cp "$lib" "$PACKAGE_DIR/"
        echo "  ‚úì $(basename $lib)"
    fi
done

# Copiar outras depend√™ncias importantes
echo "üîó Copiando depend√™ncias sistema..."
OTHER_LIBS=$(ldd build/calculadora | grep -E "(libstdc\+\+|libgcc_s)" | awk '{print $3}')
for lib in $OTHER_LIBS; do
    if [ -f "$lib" ]; then
        cp "$lib" "$PACKAGE_DIR/"
        echo "  ‚úì $(basename $lib)"
    fi
done

# Encontrar e copiar plugins Qt necess√°rios
echo "üîå Copiando plugins Qt..."
QT_PLUGIN_PATH="/usr/lib/x86_64-linux-gnu/qt6/plugins"
if [ -d "$QT_PLUGIN_PATH" ]; then
    # Plataformas (necess√°rio para interface gr√°fica)
    mkdir -p "$PACKAGE_DIR/platforms"
    if [ -f "$QT_PLUGIN_PATH/platforms/libqxcb.so" ]; then
        cp "$QT_PLUGIN_PATH/platforms/libqxcb.so" "$PACKAGE_DIR/platforms/"
        echo "  ‚úì platforms/libqxcb.so"
    fi
    
    # Imageformats (opcional, para √≠cones)
    if [ -d "$QT_PLUGIN_PATH/imageformats" ]; then
        mkdir -p "$PACKAGE_DIR/imageformats"
        cp "$QT_PLUGIN_PATH/imageformats"/*.so "$PACKAGE_DIR/imageformats/" 2>/dev/null || true
        echo "  ‚úì imageformats/"
    fi
fi

# Criar script de execu√ß√£o
echo "üìú Criando script de execu√ß√£o..."
cat > "$PACKAGE_DIR/run-calculadora.sh" << 'EOF'
#!/bin/bash

# Script de execu√ß√£o da Calculadora Qt C++
# Configura o ambiente e executa a aplica√ß√£o

# Obter diret√≥rio do script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Configurar biblioteca Qt
export LD_LIBRARY_PATH="$DIR:$LD_LIBRARY_PATH"
export QT_PLUGIN_PATH="$DIR"

# Executar calculadora
cd "$DIR"
./calculadora "$@"
EOF

chmod +x "$PACKAGE_DIR/run-calculadora.sh"

# Criar README para o usu√°rio
echo "üìÑ Criando documenta√ß√£o..."
cat > "$PACKAGE_DIR/README.txt" << EOF
üßÆ CALCULADORA QT C++ - VERS√ÉO PORT√ÅTIL
=====================================

üìã COMO USAR:
1. Extraia este arquivo ZIP em qualquer pasta
2. Execute: ./run-calculadora.sh
   OU clique duplo em: calculadora

üîß FUNCIONALIDADES:
‚úì Opera√ß√µes b√°sicas: +, -, *, /
‚úì Hist√≥rico de opera√ß√µes
‚úì Interface gr√°fica moderna
‚úì Suporte a n√∫meros decimais
‚úì Suporte completo a teclado

‚öôÔ∏è REQUISITOS SISTEMA:
- Linux 64-bit
- Bibliotecas gr√°ficas b√°sicas (X11/Wayland)
- N√£o requer instala√ß√£o do Qt

üì± CONTROLES:
- N√∫meros: 0-9, ponto decimal
- Opera√ß√µes: +, -, *, /
- Resultado: Enter ou =
- Limpar: C ou Delete
- Hist√≥rico: Clique em opera√ß√µes anteriores

üêõ PROBLEMAS?
Se n√£o executar, tente no terminal:
  cd pasta-da-calculadora
  ./run-calculadora.sh

üìß SUPORTE:
GitHub: https://github.com/Eveneto/calculadora

Vers√£o: 1.0.0
Data: $(date '+%d/%m/%Y')
EOF

# Criar arquivo de informa√ß√µes t√©cnicas
cat > "$PACKAGE_DIR/TECNICO.txt" << EOF
INFORMA√á√ïES T√âCNICAS - Calculadora Qt C++
=========================================

üì¶ CONTE√öDO DO PACOTE:
- calculadora           # Execut√°vel principal
- libQt6*.so            # Bibliotecas Qt runtime
- platforms/            # Plugins de plataforma Qt
- imageformats/         # Plugins de imagem Qt (opcional)
- run-calculadora.sh    # Script de execu√ß√£o
- *.so                  # Outras depend√™ncias

üîß ESTRUTURA:
Este √© um pacote "port√°til" que inclui todas as depend√™ncias
necess√°rias para executar a calculadora sem instala√ß√£o do Qt.

üìã DEPEND√äNCIAS INCLU√çDAS:
$(ldd build/calculadora | grep "=>" | head -10)

üíæ TAMANHO TOTAL: ~$(du -sh "$PACKAGE_DIR" | cut -f1)

üñ•Ô∏è TESTADO EM:
- Ubuntu 22.04/24.04
- Sistema $(uname -s) $(uname -m)
- Qt $(qmake6 --version | grep "Qt version" | cut -d' ' -f4)
EOF

# Verificar tamanho do pacote
PACKAGE_SIZE=$(du -sh "$PACKAGE_DIR" | cut -f1)
echo "üìä Tamanho do pacote: $PACKAGE_SIZE"

# Criar ZIP
echo "üóúÔ∏è Criando arquivo ZIP..."
cd dist/
if command -v zip &> /dev/null; then
    zip -r "../$ZIP_FILE" "$PACKAGE_NAME/" > /dev/null
    cd ..
    ZIP_SIZE=$(du -sh "$ZIP_FILE" | cut -f1)
    echo "‚úÖ Arquivo criado: $ZIP_FILE ($ZIP_SIZE)"
else
    cd ..
    tar -czf "${PACKAGE_NAME}.tar.gz" -C dist "$PACKAGE_NAME"
    TAR_SIZE=$(du -sh "${PACKAGE_NAME}.tar.gz" | cut -f1)
    echo "‚úÖ Arquivo criado: ${PACKAGE_NAME}.tar.gz ($TAR_SIZE)"
fi

# Teste r√°pido
echo "üß™ Testando pacote..."
if [ -f "$PACKAGE_DIR/calculadora" ] && [ -x "$PACKAGE_DIR/run-calculadora.sh" ]; then
    echo "‚úÖ Pacote criado com sucesso!"
else
    echo "‚ùå Erro na cria√ß√£o do pacote!"
    exit 1
fi

# Resumo final
echo
echo "üéâ PACOTE PORT√ÅTIL CRIADO!"
echo "=========================="
echo "üì¶ Arquivo: $ZIP_FILE (se zip dispon√≠vel) ou ${PACKAGE_NAME}.tar.gz"
echo "üìÇ Pasta: $PACKAGE_DIR"
echo "üíæ Tamanho: $PACKAGE_SIZE"
echo
echo "üìã Para testar localmente:"
echo "   cd $PACKAGE_DIR"
echo "   ./run-calculadora.sh"
echo
echo "üì§ Para enviar ao amigo:"
echo "   Envie o arquivo $ZIP_FILE ou ${PACKAGE_NAME}.tar.gz"
echo "   Instrua para extrair e executar run-calculadora.sh"
echo
echo "üí° O pacote √© independente e n√£o precisa de Qt instalado!"
